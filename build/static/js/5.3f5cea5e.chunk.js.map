{"version":3,"sources":["Media/Images/Credential/signup.png","Components/Signup/index.js","https.js"],"names":["module","exports","__webpack_require__","p","Signup","props","_this","Object","W_Phaze_Staging_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","W_Phaze_Staging_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","W_Phaze_Staging_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","OpenTerms","e","then","t","bind","file","window","open","default","CreateAccount","event","preventDefault","emailEl","target","passEl","passConfrimEl","promoEl","checkEl","validity","valid","checked","body","username","value","password","promo","POSTAPI","setState","success","authMessage","catch","error","message","statusCode","classList","add","state","scrollTo","top","left","behavior","_this2","main","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","src","LOGO","alt","className","onClick","history","push","noValidate","onSubmit","id","name","type","maxLength","placeholder","required","spellCheck","htmlFor","pattern","onChange","document","getElementById","defaultValue","match","params","code","Picture","React","Component","d","__webpack_exports__","GetAPI","CheckAuth","GetOther","request_promise__WEBPACK_IMPORTED_MODULE_0__","request_promise__WEBPACK_IMPORTED_MODULE_0___default","n","API","url","requestPromise","method","json","withCredentials"],"mappings":"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","file":"static/js/5.3f5cea5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/signup.e7f51eec.png\";","import React from 'react'\r\nimport './index.css'\r\nimport LOGO from '../../Media/Images/Logo.png'\r\nimport {POSTAPI} from '../../https'\r\nimport Picture from '../../Media/Images/Credential/signup.png'\r\n\r\nclass Signup extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            success: false,\r\n            authMessage: null\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        window.scrollTo({ top: 0, left: 0, behavior: 'smooth'})\r\n    }\r\n    OpenTerms = ()=>{\r\n        import('../../Media/Files/Terms.pdf').then(file=>window.open(file.default, '_blank'))\r\n    }\r\n    CreateAccount = (event)=>{\r\n        event.preventDefault()\r\n        let emailEl = event.target['signup-email']\r\n        let passEl = event.target['signup-password']\r\n        let passConfrimEl = event.target['signup-password-confirm']\r\n        let promoEl = event.target['signup-promo']\r\n        let checkEl = event.target['signup-check']\r\n        if(!emailEl.validity.valid || !passEl.validity.valid || !passConfrimEl.validity.valid || !promoEl.validity.valid || !checkEl.checked){\r\n            emailEl.classList.add('Checked')\r\n            passEl.classList.add('Checked')\r\n            passConfrimEl.classList.add('Checked')\r\n            promoEl.classList.add('Checked')\r\n            checkEl.classList.add('Checked')\r\n            this.setState({ authMessage: null })\r\n        }\r\n        else{\r\n            let body={\r\n                username: emailEl.value,\r\n                password: passEl.value,\r\n                promo: promoEl.value\r\n            }\r\n            POSTAPI('public/signup', body).then(()=>{\r\n                this.setState({\r\n                    success: true,\r\n                    authMessage: null\r\n                })\r\n            }).catch(error=>{\r\n                let message = 'Please Try Again'\r\n                if(error.statusCode === 403)\r\n                    message = 'This promo code is expired or invalid'\r\n                else if(error.statusCode === 400)\r\n                    message = 'The email has been used already'\r\n                this.setState({ authMessage: message })\r\n            })\r\n        }\r\n    }\r\n    render(){\r\n        let main = null\r\n        if(!this.state.success)\r\n            main = <React.Fragment>\r\n                            <p className='Goback' onClick={()=>this.props.history.push('/login')}><i className=\"fas fa-long-arrow-alt-left\"></i></p>\r\n                            <img src={LOGO} alt=\"\" />\r\n                            <p className='Title'>Create your account</p>\r\n                            <form noValidate onSubmit={(event)=>this.CreateAccount(event)}>\r\n                                <div className='Inline-Input'>\r\n                                    <input id='signup-email' name='signup-email' type='email' maxLength='24' placeholder='e-mail' required spellCheck=\"false\"></input>\r\n                                    <label htmlFor='signup-email'>\r\n                                        <i className=\"far fa-envelope\"></i>\r\n                                    </label>\r\n                                    <p>Email should be valid</p>\r\n                                </div>\r\n                                <div className='Inline-Input'>\r\n                                    <input id='signup-password' name='signup-password' type='password' maxLength='24' pattern='^[0-9A-z]{8,}$'\r\n                                        placeholder='password' required onChange={(event)=>document.getElementById('signup-password-confirm').pattern=event.target.value}></input>\r\n                                    <label htmlFor='signup-password'>\r\n                                        <i className=\"fas fa-key\"></i>\r\n                                    </label>\r\n                                    <p>Password should be 8~24 letters or numbers</p>\r\n                                </div>\r\n                                <div className='Inline-Input'>\r\n                                    <input id='signup-password-confirm' name='signup-password-confirm' type='password' maxLength='24' pattern='^[0-9A-z]{8,}$' placeholder='repeat your password' required></input>\r\n                                    <label htmlFor='signup-password-confirm'>\r\n                                        <i className=\"fas fa-key\"></i>\r\n                                    </label>\r\n                                    <p>Two passwords should be identical</p>\r\n                                </div>\r\n                                <div className='Inline-Input'>\r\n                                    <input id='signup-promo' name='signup-promo' type='text' maxLength='24' placeholder='promo code' spellCheck=\"false\" required defaultValue={this.props.match.params.code}></input>\r\n                                    <label htmlFor='signup-promo'>\r\n                                        <i className=\"fas fa-gift\"></i>\r\n                                    </label>\r\n                                    <p>Promo code is required</p>\r\n                                </div>\r\n                                <div className=\"CheckCondition\">\r\n                                    <input id=\"signup-check\" name='signup-check' type=\"checkbox\" />\r\n                                    <label htmlFor=\"signup-check\">\r\n                                        <span></span>\r\n                                    </label>\r\n                                    <span>I accept the <i onClick={this.OpenTerms}>Terms & Condition</i></span>\r\n                                    <p>You need confirm to agree</p>\r\n                                </div>\r\n                                {this.state.authMessage?\r\n                                    <p className='AuthError'>{this.state.authMessage}</p>\r\n                                :null\r\n                                }\r\n                                <button type='submit' className='button-1'>signup<i className=\"fas fa-arrow-right\"></i></button>\r\n                            </form>\r\n                        </React.Fragment>\r\n        else\r\n            main = <React.Fragment>\r\n                            <img src={LOGO} alt=\"\" />\r\n                            <p className='Title'>Success!</p>\r\n                            <p className='Description'>Great! Your account has been created.</p>\r\n                            <button className='button-1' onClick={()=>this.props.history.push('/login')}>login<i className=\"fas fa-arrow-right\"></i></button>  \r\n                        </React.Fragment>\r\n        return  <div id='Signup'>\r\n                        <div id='Signup-Desktop-Background'>\r\n                            <div className='Left'>\r\n                                <p className='Title'>Recieve Fiat Digital Gift Cards</p>\r\n                                <p className='Description'>We provide an alternative to converting crypto to fiat through your bank. Instantly recieve fiat digital gift cards and spend your cryptocurrency.</p>\r\n                                <div className='Picture'>\r\n                                    <img src={Picture} alt=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className='Right'>\r\n                            </div>\r\n                        </div>\r\n                        <div id='Signup-Main'>\r\n                           {main}\r\n                        </div>\r\n                    </div>\r\n    }\r\n}\r\n\r\nexport default Signup","import requestPromise from 'request-promise'\r\n\r\nlet API = \"https://webstaging.phaze.io/api/\"\r\n// let API = \"https://www.webapp.phaze.io/api/\"\r\n\r\nexport function GetAPI(url){\r\n    return requestPromise({\r\n        method: 'GET',  \r\n        url: API+url,\r\n        json: true, \r\n        withCredentials: true\r\n    })\r\n}\r\n\r\nexport function POSTAPI(url, body){\r\n    return requestPromise({\r\n        method: 'POST',  \r\n        url: API+url, \r\n        body: body, \r\n        json: true, \r\n        withCredentials: true,\r\n    })\r\n}\r\n\r\nexport function CheckAuth(){\r\n    return requestPromise({\r\n        method: 'GET',  \r\n        url: API+'users/check_auth',\r\n        json: true, \r\n        withCredentials: true,\r\n    })\r\n}\r\n\r\nexport function GetOther(url){\r\n    return requestPromise({\r\n        url: url,\r\n        json: true\r\n    })\r\n}\r\n"],"sourceRoot":""}