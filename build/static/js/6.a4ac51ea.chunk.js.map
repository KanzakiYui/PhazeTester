{"version":3,"sources":["Media/Images/Credential/forgot.png","Components/Forgot/index.js","https.js"],"names":["module","exports","__webpack_require__","p","Forgot","props","_this","Object","W_Phaze_Staging_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","W_Phaze_Staging_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","W_Phaze_Staging_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","SendEmail","event","preventDefault","emailEl","target","validity","valid","body","email","value","POSTAPI","then","setState","sent","catch","error","authMessage","statusCode","classList","add","ChangePassword","passEl","passConfrimEl","token","code","password","success","state","match","params","window","scrollTo","top","left","behavior","_this2","main","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","className","onClick","history","push","src","LOGO","alt","noValidate","onSubmit","id","name","type","maxLength","placeholder","required","spellCheck","htmlFor","pattern","onChange","document","getElementById","Picture","React","Component","d","__webpack_exports__","GetAPI","CheckAuth","GetOther","request_promise__WEBPACK_IMPORTED_MODULE_0__","request_promise__WEBPACK_IMPORTED_MODULE_0___default","n","API","url","requestPromise","method","json","withCredentials"],"mappings":"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","file":"static/js/6.a4ac51ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/forgot.3b55821f.png\";","import React from 'react'\r\nimport './index.css'\r\nimport LOGO from '../../Media/Images/Logo.png'\r\nimport {POSTAPI} from '../../https'\r\nimport Picture from '../../Media/Images/Credential/forgot.png'\r\n\r\nclass Forgot extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            authMessage: null,\r\n            sent: false,\r\n            success: false,\r\n        }\r\n        this.code = this.props.match.params.code\r\n    }\r\n    componentDidMount(){\r\n        window.scrollTo({ top: 0, left: 0, behavior: 'smooth'})\r\n    }\r\n    SendEmail = (event)=>{\r\n        event.preventDefault()\r\n        let emailEl = event.target['forgot-email']\r\n        if(!emailEl.validity.valid){\r\n            emailEl.classList.add('Checked')\r\n            this.setState({ authMessage: null })\r\n        }\r\n        else{\r\n            let body = {\r\n                email: emailEl.value,\r\n            }\r\n            POSTAPI('public/reset_password', body).then(()=>{\r\n                this.setState({ sent: true })\r\n            }).catch(error=>this.setState({authMessage: error.statusCode === 400?'User Does Not Exist':'Please Try Again'}))\r\n        }\r\n    }\r\n    ChangePassword = (event)=>{\r\n        event.preventDefault()\r\n        let passEl = event.target['forgot-password']\r\n        let passConfrimEl = event.target['forgot-password-confirm']\r\n        if(!passEl.validity.valid || !passConfrimEl.validity.valid){\r\n            passEl.classList.add('Checked')\r\n            passConfrimEl.classList.add('Checked')\r\n            this.setState({ authMessage: null })\r\n        }\r\n        else{\r\n            let body = {\r\n                token: this.code,\r\n                password: passEl.value\r\n            }\r\n            POSTAPI('public/reset_password_verify', body).then(()=>{\r\n                this.setState({ success: true })\r\n            }).catch(error=>this.setState({authMessage: error.statusCode === 400?'Code Invalid or Expired':'Please Try Again'}))\r\n        }\r\n    }\r\n    render(){\r\n        let main = null\r\n        if(!this.code&&!this.state.sent)\r\n            main = <React.Fragment>\r\n                            <p className='Goback' onClick={()=>this.props.history.push('/login')}><i className=\"fas fa-long-arrow-alt-left\"></i></p>\r\n                            <img src={LOGO} alt=\"\" />\r\n                            <p className='Title'>Password assistance</p>\r\n                            <p className='Description'>Just need to confirm your email to send you instructions to reset your password.</p>\r\n                            <form noValidate onSubmit={(event)=>this.SendEmail(event)}>\r\n                                <div className='Inline-Input'>\r\n                                    <input id='forgot-email' name='forgot-email' type='email' maxLength='24' placeholder='e-mail' required spellCheck=\"false\"></input>\r\n                                    <label htmlFor='forgot-email'>\r\n                                        <i className=\"far fa-envelope\"></i>\r\n                                    </label>\r\n                                    <p>Email should be valid</p>\r\n                                </div>\r\n                                {this.state.authMessage?\r\n                                    <p className='AuthError'>{this.state.authMessage}</p>\r\n                                :null\r\n                                }\r\n                                <button type='submit' className='button-1'>send email<i className=\"fas fa-arrow-right\"></i></button>\r\n                            </form>\r\n                        </React.Fragment>\r\n        if(!this.code&&this.state.sent)\r\n            main = <React.Fragment>\r\n                            <img src={LOGO} alt=\"\" />\r\n                            <p className='Title'>Success!</p>\r\n                            <p className='Description'>Please check your mailbox for your password reset link.</p>\r\n                            <button type='submit' className='button-1' onClick={()=>this.props.history.push('/login')}>login<i className=\"fas fa-arrow-right\"></i></button>\r\n                        </React.Fragment>\r\n        if(this.code&&!this.state.success)\r\n            main = <React.Fragment>\r\n                            <img src={LOGO} alt=\"\" />\r\n                            <p className='Title'>Create new password</p>\r\n                            <form noValidate onSubmit={(event)=>this.ChangePassword(event)}>\r\n                                <div className='Inline-Input'>\r\n                                    <input id='forgot-password' name='forgot-password' type='password' maxLength='24' pattern='^[0-9A-z]{8,}$'\r\n                                        placeholder='new password' required onChange={(event)=>document.getElementById('forgot-password-confirm').pattern=event.target.value}></input>\r\n                                    <label htmlFor='forgot-password'>\r\n                                        <i className=\"fas fa-key\"></i>\r\n                                    </label>\r\n                                    <p>Password should be 8~24 letters or numbers</p>\r\n                                </div>\r\n                                <div className='Inline-Input'>\r\n                                    <input id='forgot-password-confirm' name='forgot-password-confirm' type='password' maxLength='24' pattern='^[0-9A-z]{8,}$' placeholder='repeat new password' required></input>\r\n                                    <label htmlFor='forgot-password-confirm'>\r\n                                        <i className=\"fas fa-key\"></i>\r\n                                    </label>\r\n                                    <p>Two passwords should be identical</p>\r\n                                </div>\r\n                                {this.state.authMessage?\r\n                                    <p className='AuthError'>{this.state.authMessage}</p>\r\n                                :null\r\n                                }\r\n                                <button type='submit' className='button-1'>confirm password<i className=\"fas fa-arrow-right\"></i></button>\r\n                            </form>\r\n                        </React.Fragment>\r\n        if(this.code&&this.state.success)\r\n            main = <React.Fragment>\r\n                            <img src={LOGO} alt=\"\" />\r\n                            <p className='Title'>Success!</p>\r\n                            <p className='Description'>Awesome - your new password has been created.</p>\r\n                            <button type='submit' className='button-1' onClick={()=>this.props.history.push('/login')}>login<i className=\"fas fa-arrow-right\"></i></button>\r\n                        </React.Fragment>\r\n        return  <div id='Forgot'>\r\n                        <div id='Forgot-Desktop-Background'>\r\n                            <div className='Left'>\r\n                                <p className='Title'>Buy your cryptocurrency through Phaze</p>\r\n                                <p className='Description'>Phaze gives you a reason to buy cryptocurrency and spend it, simply because you save money by getting up to 25% cashback, which means more rewards then any credit card.</p>\r\n                                <div className='Picture'>\r\n                                    <img src={Picture} alt=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className='Right'>\r\n                            </div>\r\n                        </div>\r\n                        <div id='Forgot-Main'>\r\n                            {main}\r\n                        </div>\r\n                    </div>\r\n        /*\r\n        let Row1 = ['amazonca', 'aircanada', 'starbucksca', 'walmart'].map((url, index)=><Card type={0} key={index} urlpath={url} />)\r\n        let Row2 = ['keg', 'sephora', 'cineplex', 'milestones'].map((url, index)=><Card type={0} key={index} urlpath={url} />)\r\n        return  <div id='Login'>\r\n                        <div id='Login-Desktop-Background'>\r\n                            <div className='Left'>\r\n                                <p className='Title'>Spend your crypto anywhere!</p>\r\n                                <p className='Description'>The worlds biggest merchants exclusively accept cryptocurrency through Phaze wallet and reward you with bonuses at all of their online and in-store locations.</p>\r\n                                <div className='Row'>\r\n                                    {Row1}\r\n                                </div>\r\n                                <div className='Row'>\r\n                                    {Row2}\r\n                                </div>\r\n                            </div>\r\n                            <div className='Right'>\r\n                            </div>\r\n                        </div>\r\n                        <div id='Login-Main'>\r\n                            <img src={LOGO} alt=\"\" />\r\n                            <p className='Title'>Free your <br/>cryptocurrency</p>\r\n                            <p className='Description'>Spend your crypto internationally at over 100,000 locations - online and in-store.</p>\r\n                            <form noValidate onSubmit={(event)=>this.PreCheck(event)}>\r\n                                <div className='Inline-Input'>\r\n                                    <input id='login-email' name='login-email' type='email' maxLength='24' placeholder='e-mail' required spellCheck=\"false\"></input>\r\n                                    <label htmlFor='login-email'>\r\n                                        <i className=\"far fa-envelope\"></i>\r\n                                    </label>\r\n                                    <p>Email should be valid</p>\r\n                                </div>\r\n                                <div className='Inline-Input'>\r\n                                    <input id='login-password' name='login-password' type='password' maxLength='24' pattern='^[0-9A-z]+$' placeholder='password' required></input>\r\n                                    <label htmlFor='login-password'>\r\n                                        <i className=\"fas fa-key\"></i>\r\n                                    </label>\r\n                                    <p>Password is required</p>\r\n                                </div>\r\n                                {this.state.authMessage?\r\n                                    <p className='AuthError'>{this.state.authMessage}</p>\r\n                                :null\r\n                                }\r\n                                <button type='submit' className='button-1'>login<i className=\"fas fa-arrow-right\"></i></button>\r\n                                <button type='button' className='button-2' onClick={()=>this.props.history.push('/signup')}>sign up<i className=\"fas fa-arrow-right\"></i></button>\r\n                            </form>\r\n                            <p className='Forgot'>Forgot your password?</p>\r\n                        </div>\r\n                    </div>\r\n        */\r\n    }\r\n}\r\n\r\nexport default Forgot","import requestPromise from 'request-promise'\r\n\r\nlet API = \"https://webstaging.phaze.io/api/\"\r\n// let API = \"https://www.webapp.phaze.io/api/\"\r\n\r\nexport function GetAPI(url){\r\n    return requestPromise({\r\n        method: 'GET',  \r\n        url: API+url,\r\n        json: true, \r\n        withCredentials: true\r\n    })\r\n}\r\n\r\nexport function POSTAPI(url, body){\r\n    return requestPromise({\r\n        method: 'POST',  \r\n        url: API+url, \r\n        body: body, \r\n        json: true, \r\n        withCredentials: true,\r\n    })\r\n}\r\n\r\nexport function CheckAuth(){\r\n    return requestPromise({\r\n        method: 'GET',  \r\n        url: API+'users/check_auth',\r\n        json: true, \r\n        withCredentials: true,\r\n    })\r\n}\r\n\r\nexport function GetOther(url){\r\n    return requestPromise({\r\n        url: url,\r\n        json: true\r\n    })\r\n}\r\n"],"sourceRoot":""}