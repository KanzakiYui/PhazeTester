{"version":3,"sources":["Components/Dashboard/Card/index.js","Media/Images/Cards lazy /^/.*/.png$/ groupOptions: {} namespace object","calculate.js","Components/Dashboard/Payment/index.js"],"names":["Card","props","_this","Object","B_PHAZE_phazewebapp_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","B_PHAZE_phazewebapp_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","B_PHAZE_phazewebapp_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","GetURL","__webpack_require__","urlpath","then","url","setState","default","catch","GetPlaceHolder","e","t","bind","state","type","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","data-value","src","alt","name","country","value","codeToCurrency","countryToCode","min","max","React","Component","map","./aircanada.png","./amazonca.png","./amazonus.png","./americanairlines.png","./bestbuy.png","./blank.png","./cineplex.png","./keg.png","./milestones.png","./montanas.png","./sephora.png","./starbucksca.png","./starbucksus.png","./walmart.png","webpackAsyncContext","req","ids","id","Promise","resolve","Error","code","keys","module","exports","MoneyShow","string","integer","Math","Number","toFixed","split","decimal","react_default","Fragment","Payment","classCallCheck","possibleConstructorReturn","getPrototypeOf","ValueChange","event","target","validity","valid","selectedValue","round","openErrorBox","errorMessage","ValueUpdate","index","brandInfo","array","GotoPay","element","document","getElementById","querySelector","isNaN","subtotal","useCredit","availableCredit","denomination","history","push","_this2","paymentSelectContent","settings","centerMode","centerPadding","dots","arrows","speed","slidesToShow","swipeToSlide","afterChange","cards","key","lib_default","step","placeholder","onChange","Message","open","buttonText","content","close","fee","onClick","goBack","prevState","Menu"],"mappings":"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","file":"static/js/9.b0bb7354.chunk.js","sourcesContent":["import React from 'react'\r\nimport './index.css'\r\nimport {countryToCode, codeToCurrency} from '../../../constants'\r\n\r\nclass Card extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            urlpath: null,\r\n            url: null\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.GetURL()\r\n    }\r\n    componentDidUpdate(){\r\n        if(this.props.urlpath!==this.state.urlpath)\r\n            this.GetURL()\r\n    }\r\n    GetURL = ()=>{\r\n        import('../../../Media/Images/Cards/'+this.props.urlpath+'.png').then(url=>this.setState({\r\n            urlpath: this.props.urlpath,\r\n            url: url.default\r\n        })).catch(this.GetPlaceHolder)\r\n    }\r\n    GetPlaceHolder = ()=>{\r\n        //console.log(this.props.name)\r\n        import('../../../Media/Images/Cards/blank.png').then(url=>this.setState({\r\n            urlpath: this.props.urlpath,\r\n            url: url.default\r\n        })).catch(()=>{})\r\n    }\r\n    render(){\r\n        switch(this.props.type){\r\n            case 0:\r\n                return  <div className='Card Card-Featured' data-value={this.props.urlpath}>\r\n                                <img src={this.state.url} alt=\"\" />\r\n                                <p className='CardName'>{this.props.name}</p>\r\n                                <p className='CardCountry'>{this.props.country}</p>\r\n                            </div>\r\n            case 1:\r\n                return  <div className='Card Card-Normal' data-value={this.props.urlpath}>\r\n                                <img src={this.state.url} alt=\"\" />\r\n                                <p className='CardName'>{this.props.name}</p>\r\n                                <p className='CardCountry'>{this.props.country}</p>\r\n                            </div>\r\n            case 2:\r\n                return  <div className='Card Card-Denomination'>\r\n                                <img src={this.state.url} alt=\"\" />\r\n                                <p className='CardValue'>$ {this.props.value} {codeToCurrency[countryToCode[this.props.country]]}</p>\r\n                            </div>\r\n            case 3:\r\n                return  <div className='Card Card-Arbitrary'>\r\n                                <img src={this.state.url} alt=\"\" />\r\n                                <p className='CardValue'>$ {this.props.min} ~ $ {this.props.max} {codeToCurrency[countryToCode[this.props.country]]}</p>\r\n                            </div>\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n}\r\n\r\nexport default Card","var map = {\n\t\"./aircanada.png\": [\n\t\t346,\n\t\t12\n\t],\n\t\"./amazonca.png\": [\n\t\t347,\n\t\t13\n\t],\n\t\"./amazonus.png\": [\n\t\t348,\n\t\t14\n\t],\n\t\"./americanairlines.png\": [\n\t\t349,\n\t\t15\n\t],\n\t\"./bestbuy.png\": [\n\t\t350,\n\t\t16\n\t],\n\t\"./blank.png\": [\n\t\t235,\n\t\t1\n\t],\n\t\"./cineplex.png\": [\n\t\t351,\n\t\t17\n\t],\n\t\"./keg.png\": [\n\t\t352,\n\t\t18\n\t],\n\t\"./milestones.png\": [\n\t\t353,\n\t\t19\n\t],\n\t\"./montanas.png\": [\n\t\t354,\n\t\t20\n\t],\n\t\"./sephora.png\": [\n\t\t355,\n\t\t21\n\t],\n\t\"./starbucksca.png\": [\n\t\t356,\n\t\t22\n\t],\n\t\"./starbucksus.png\": [\n\t\t357,\n\t\t23\n\t],\n\t\"./walmart.png\": [\n\t\t358,\n\t\t24\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 270;\nmodule.exports = webpackAsyncContext;","import React from 'react'\r\n\r\nexport function MoneyShow(string){\r\n    string = Math.max(0, Number(string)).toFixed(2)\r\n    let integer = string.split('.')[0]\r\n    let decimal = string.split('.')[1]\r\n    return  <React.Fragment>\r\n                    <i>{integer}</i>.{decimal}\r\n                </React.Fragment>\r\n}","import React from 'react'\r\nimport './index.css'\r\nimport Menu from '../Menu'\r\nimport Slider from \"react-slick\"\r\nimport Card from '../Card'\r\nimport Messagebox from '../../../Utilities/Message'\r\nimport {MoneyShow} from '../../../calculate'\r\n\r\nclass Payment extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.denomination = this.props.brandInfo?(this.props.brandInfo.array?true:false):false\r\n        this.state={\r\n            selectedValue: this.denomination?this.props.brandInfo.array[0]:0,                         // Default is $0\r\n            openErrorBox: false,\r\n            errorMessage: null,\r\n            useCredit: false,\r\n            availableCredit: 5                                                                                                      // By default  (test only)\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if(!this.props.brandInfo){\r\n            this.props.history.push('/dashboard')\r\n            return\r\n        }\r\n    }\r\n    ValueChange = (event)=>{\r\n        let element = event.target\r\n        if(!element.validity.valid){\r\n            this.setState({\r\n                openErrorBox: true,\r\n                errorMessage: 'Invalid Amount',\r\n            })\r\n            return\r\n        }\r\n        this.setState({\r\n            selectedValue: Math.round(Number(event.target.value))\r\n        })\r\n    }\r\n    ValueUpdate = (index)=>{\r\n        this.setState({\r\n            selectedValue: this.props.brandInfo.array[index]\r\n        })\r\n    }\r\n    GotoPay = ()=>{\r\n        let element = document.getElementById('Payment-Select').querySelector('input')\r\n        if(element){\r\n            if(!element.validity.valid)\r\n                return \r\n            let value = Number(element.value)\r\n            if(value === 0 || isNaN(value))\r\n                return\r\n        }\r\n        let subtotal = Number((this.state.selectedValue + this.state.selectedValue * 0.02).toFixed(2))\r\n        if(this.state.useCredit)\r\n            subtotal = Number((this.state.selectedValue*0.02 + this.state.selectedValue - this.state.availableCredit).toFixed(2))\r\n        this.props.GotoPay({\r\n            value: this.state.selectedValue,\r\n            useCredit: this.state.useCredit,\r\n            subtotal: subtotal\r\n        })\r\n    }\r\n    render(){\r\n        if(!this.props.brandInfo)\r\n            return null\r\n        let paymentSelectContent = null\r\n        if(this.denomination){\r\n            let settings = {\r\n                centerMode: true,\r\n                centerPadding: \"25%\",\r\n                dots: false,\r\n                arrows: false,\r\n                speed: 500,\r\n                slidesToShow: 1,\r\n                swipeToSlide: true,\r\n                afterChange: this.ValueUpdate,\r\n            }\r\n            let cards = this.props.brandInfo.array.map((value, index)=><Card key={index} type={2} country={this.props.brandInfo.country} urlpath={this.props.brandInfo.code} value={value}/>)\r\n            paymentSelectContent =  <div id='Payment-Select' className='Denomination'>\r\n                                                        <Slider {...settings}>\r\n                                                            {cards}\r\n                                                        </Slider>\r\n                                                      </div>\r\n        }\r\n        else{\r\n            paymentSelectContent = <div id='Payment-Select' className='Arbitrary'>\r\n                                                        <Card type={3} country={this.props.brandInfo.country} urlpath={this.props.brandInfo.code} min={this.props.brandInfo.min} max={this.props.brandInfo.max}/>\r\n                                                        <input type='number' min={this.props.brandInfo.min} max={this.props.brandInfo.max} step=\"1\" placeholder=\"Type Desired Amount\" onChange={(event)=>this.ValueChange(event)}/>\r\n                                                        <Messagebox open={this.state.openErrorBox} type='error' buttonText='Close' content={this.state.errorMessage} close={()=>this.setState({openErrorBox: false})}/>\r\n                                                     </div>\r\n        }\r\n        let fee = MoneyShow(this.state.selectedValue*0.02)\r\n        let subtotal = MoneyShow(this.state.selectedValue*0.02 + this.state.selectedValue)\r\n        if(this.state.useCredit)\r\n            subtotal = MoneyShow(this.state.selectedValue*0.02 + this.state.selectedValue - this.state.availableCredit)\r\n        return  <div id='Payment'>\r\n                        <p id='Payment-Goback' onClick={this.props.history.goBack}><i className=\"fas fa-angle-double-left\"></i>Go Back</p>\r\n                            {paymentSelectContent}\r\n                        <div id='Payment-Checkout'>\r\n                            <p className='Title'>Order Summary</p>\r\n                            <p className='Amount'>\r\n                                Gift Card Balance\r\n                                <span>$ {MoneyShow(this.state.selectedValue)}</span>\r\n                            </p>\r\n                            <p className='Fee'>\r\n                                Transaction Fee (2%)\r\n                                <span>$ {fee}</span>\r\n                            </p>\r\n                            <p className='Credit'>\r\n                                {\r\n                                    this.state.useCredit?\r\n                                    <button className='button-2' onClick={()=>this.setState(prevState=>({useCredit: !prevState.useCredit}))}>Remove PHAZE Credit</button>:\r\n                                    <button className='button-1' onClick={()=>this.setState(prevState=>({useCredit: !prevState.useCredit}))}>Apply Phaze Credit</button>\r\n                                }\r\n                                <span>- $ {MoneyShow(this.state.useCredit?this.state.availableCredit:0)}</span>\r\n                            </p>\r\n                            <p className='Divider'></p>\r\n                            <p className='Subtotal'>\r\n                                Subtotal\r\n                                <span>$ {subtotal}</span>\r\n                            </p>\r\n                        </div>\r\n                        <Menu type={1} onClick={this.GotoPay} />\r\n                    </div>\r\n    }\r\n}\r\n\r\nexport default Payment"],"sourceRoot":""}